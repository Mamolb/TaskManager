// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  tasks         Task[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  id                          String   @id @default(cuid())
  userId                      String
  type                        String
  provider                    String
  providerAccountId           String
  refresh_token               String?
  access_token                String?
  expires_at                  Int?
  refresh_token_expires_in    Int?  // <-- ADD THIS LINE
  token_type                  String?
  scope                       String?
  id_token                    String?
  session_state               String?
  user                        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Task {
  id          String   @id @default(uuid())
  title       String
  description String?
  completed   Boolean  @default(false) //TODO: REMOVE AFTER TASKSTATUS IMPLEMENTED
  dueDate     DateTime? 
  status      TaskStatus @default(NOT_STARTED) 
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

//Enum to keep track of Task Status
enum TaskStatus {  
  NOT_STARTED
  IN_PROGRESS
  DONE
}
